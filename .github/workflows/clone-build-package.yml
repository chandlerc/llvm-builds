# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions

name: Build and release

on:
  push:
    branches:
      - main

jobs:
  build:
    strategy:
      fail-fast: false

      matrix:
        include:
          - os: ubuntu-18.04
            install_ninja_command: sudo apt install ninja-build
          - os: macos-10.15
            install_ninja_command: brew install ninja
          - os: windows-2019
            install_ninja_command: choco install ninja

    defaults:
      run:
        shell: bash  # even on Windows

    name: Build (${{matrix.os}})
    runs-on: ${{matrix.os}}
    steps:
      - name: install Ninja
        run: ${{matrix.install_ninja_command}}

      # Put MSVC (cl.exe) on PATH. No-op unless on Windows.
      - name: set up MSVC environment variables
        uses: ilammy/msvc-dev-cmd@v1.5.0

      - name: checkout
        uses: actions/checkout@v2

      - name: get LLVM commit
        id: get_llvm_commit
        run: echo "::set-output name=commit::$(<llvm_commit)"

      - name: checkout llvm-project
        uses: actions/checkout@v2
        with:
          repository: llvm/llvm-project
          path: llvm-project
          ref: ${{ steps.get_llvm_commit.outputs.commit }}
          fetch-depth: 1

      - name: configure
        run: |
          # Use MSVC on Windows and Clang everywhere else.
          if [[ '${{runner.os}}' == 'Windows' ]]; then
            export CC=cl.exe
            export CXX=cl.exe
          else
            export CC=clang
            export CXX=clang++
          fi

          cmake -G Ninja -B build $(grep -v '^#' cmake-defines.txt) llvm-project/llvm

      - name: build
        run: cmake --build build

      - name: install
        run: cmake --install build --prefix install

      - name: package
        run: 7z a ../llvm.7z .
        working-directory: ./install

      - name: hash
        run: openssl dgst -sha256 llvm.7z

      - name: upload artifact
        uses: actions/upload-artifact@v2
        with:
          # runner.os is one of "Windows", "Linux", or "macOS"
          name: llvm-${{runner.os}}
          path: llvm.7z

      - name: show remaining disk space
        run: df -h .
    outputs:
      llvm_commit: ${{ steps.get_llvm_commit.outputs.commit }}

  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      # When used with no arguments, downloads all artifacts, each into its own
      # directory named for its artifact name.
      - name: download artifacts
        uses: actions/download-artifact@v2

      # Give files different names so they don't collide in the release.
      # Include the run number so users can download+extract multiple releases.
      - name: rename and rearrange
        run: |
          mv llvm-Linux/llvm.7z llvm-linux-${{ github.run_number }}.7z
          mv llvm-macOS/llvm.7z llvm-macos-${{ github.run_number }}.7z
          mv llvm-Windows/llvm.7z llvm-windows-${{ github.run_number }}.7z

      # Include LLVM commit from the builder in the release message.
      # Oddly, the output from a matrixed job is returned as a single value --
      # maybe "last write wins" ? -- rather than as a list. This works for us
      # because all job instances output the same value.
      # discussion: https://github.community/t/bug-jobs-output-should-return-a-list-for-a-matrix-job/128626
      #
      # GitHub will turn `owner/repo@SHA` into a link, though not the more
      # general `owner/repo@ref`.
      # ref: https://docs.github.com/en/github/writing-on-github/autolinked-references-and-urls
      - name: create release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: r${{ github.run_number }}
          name: build ${{ github.run_number }}
          body: |
            llvm/llvm-project@${{ needs.build.outputs.llvm_commit }}

            logs: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

          # List each OS explicitly so the release will fail if any are missing.
          files: |
            llvm-linux-*.7z
            llvm-macos-*.7z
            llvm-windows-*.7z
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
